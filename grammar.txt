Program -> Statement Program'
Program' -> Program
        | epsilon

Statement -> Let
	         | Instr

Instr -> Expr ;

Let -> let Identifier Params = Expr end

Params -> Identifier Params
       | epsilon

Expr -> Expr Argument
      | Literal
      | List
      | Identifier
      | let Identifier Params = Expr in Expr //not implemented yet
      | ( Expr )
      | begin Expr end

Literal -> Number
        | Text
        | String

Argument -> Expr Argument
         | epsilon

List -> [ Expr RestList ]
        | [ ]

RestList -> ; Expr RestList'
RestList' -> RestList
          | epsilon

Text -> text

Number -> [0-9] Number
        | epsilon

Identifier -> [_A-Za-z] Identifier
           | [_A-Za-z] [_A-Za-z0-9] Identifier
           | epsilon

